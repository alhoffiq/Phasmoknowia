{"version":3,"sources":["PossibilityList.js","App.js","index.js"],"names":["PossibilityList","ghost","evidence","remainingEvidence","height","length","console","log","i","includes","push","className","style","type","App","useState","collectedEvidence","setEvidence","evidenceCount","setCount","possibilities","setPossibilities","findPossibleGhosts","possibleGhosts","ghosts","filter","every","addEvidence","document","getElementById","disabled","innerHTML","providedEvidence","findGhost","elements","querySelectorAll","id","Button","variant","onClick","reset","slice","map","possibility","strength","weakness","ReactDOM","render","StrictMode"],"mappings":"iNAmCeA,EAlCS,YAAwC,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,SACnCC,EAAoB,GACpBC,EAAS,IAF8C,EAAVC,OAEvB,IAE1BC,QAAQC,IAAIH,GAEZ,IAAK,IAAII,EAAI,EAAGA,EAAI,EAAGA,IACnB,OAAQN,EAASG,QACb,KAAK,EACIJ,EAAMC,SAASM,GAAGC,SAASP,EAAS,KACrCC,EAAkBO,KAAKT,EAAMC,SAASM,IAE1C,MACJ,KAAK,EACIP,EAAMC,SAASM,GAAGC,SAASP,EAAS,KAAQD,EAAMC,SAASM,GAAGC,SAASP,EAAS,KACjFC,EAAkBO,KAAKT,EAAMC,SAASM,IAStD,OACI,sBAAKG,UAAU,cAAcC,MAAO,CAACR,OAAQA,GAA7C,UACI,+BAAKH,EAAMY,KAAX,SACA,6BAAKV,EAAkB,KACtBA,EAAkBE,OAAS,GACxB,qCAAQF,EAAkB,UCgJ3BW,MAxKf,WACE,MAAyCC,mBAAS,IAAlD,mBAAOC,EAAP,KAA0BC,EAA1B,KACA,EAAgCF,mBAAS,GAAzC,mBAAKG,EAAL,KAAoBC,EAApB,KACA,EAA0CJ,mBAAS,IAAnD,mBAAOK,EAAP,KAAsBC,EAAtB,KAsCA,SAASC,IACP,IAAMC,EAAiBC,EAAOC,QAAO,SAACxB,GAEpC,OADmBe,EAAkBU,OAAM,SAAAxB,GAAQ,OAAID,EAAMC,SAASO,SAASP,SAGjFmB,EAAiBE,GAMnB,SAASI,EAAYzB,GAEnB,OADA0B,SAASC,eAAe3B,GAAU4B,UAAW,EACrCZ,GACN,KAAK,EACHF,EAAkBN,KAAKR,GACvBoB,IACAM,SAASC,eAAe,OAAOE,UAA/B,UAA8C7B,GAC9CiB,EAAS,GACT,MAEF,KAAK,EACHH,EAAkBN,KAAKR,GACvBoB,IACAM,SAASC,eAAe,OAAOE,UAA/B,UAA8C7B,GAC9CiB,EAAS,GACT,MAEF,KAAK,EACHH,EAAkBN,KAAKR,GACvBmB,EAAiB,IACjBC,IAjDN,SAAmBU,GACjB,IADoC,IAAD,WAC1BxB,GACP,IAAMP,EAAQuB,EAAOhB,GAErB,GADmBwB,EAAiBN,OAAM,SAAAxB,GAAQ,OAAID,EAAMC,SAASO,SAASP,MAG5E,OADA0B,SAASC,eAAe,SAASE,UAAjC,UAAgD9B,EAAMY,MACtD,QAEAe,SAASC,eAAe,SAASE,UAAY,QAPxCvB,EAAI,EAAGA,EAAIgB,EAAOnB,QAAa,YAA/BG,GAA0BA,MAkD/ByB,CAAUjB,GAEVY,SAASC,eAAe,OAAOE,UAA/B,UAA8C7B,GAE9C,IADA,IAAIgC,EAAWN,SAASO,iBAAiB,UAChC3B,EAAI,EAAGA,EAAI0B,EAAS7B,OAAQG,IACnC0B,EAAS1B,GAAGsB,UAAW,EAGzBZ,KAON,OACE,sBAAKP,UAAU,YAAf,UACE,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,QAAf,SACE,oBAAIA,UAAU,QAAQyB,GAAG,MAAzB,0BAEF,qBAAKzB,UAAU,QAAf,SACE,oBAAIA,UAAU,QAAQyB,GAAG,MAAzB,0BAEF,qBAAKzB,UAAU,QAAf,SACE,oBAAIA,UAAU,QAAQyB,GAAG,MAAzB,0BAEF,qBAAKzB,UAAU,QAAf,SACE,oBAAIA,UAAU,QAAQyB,GAAG,QAAzB,6BAGJ,sBAAKzB,UAAU,MAAf,UACE,qBAAKA,UAAU,QAAf,SACE,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,QAAf,SACE,cAAC0B,EAAA,EAAD,CAAQC,QAAQ,kBAAkB3B,UAAU,QAAQyB,GAAG,cAAcG,QAAS,kBAAMZ,EAAY,gBAAhG,2BAEF,qBAAKhB,UAAU,QAAf,SACE,cAAC0B,EAAA,EAAD,CAAQC,QAAQ,kBAAkB3B,UAAU,QAAQyB,GAAG,eAAeG,QAAS,kBAAMZ,EAAY,iBAAjG,4BAEF,qBAAKhB,UAAU,QAAf,SACE,cAAC0B,EAAA,EAAD,CAAQC,QAAQ,kBAAkB3B,UAAU,QAAQyB,GAAG,aAAaG,QAAS,kBAAMZ,EAAY,eAA/F,0BAEF,qBAAKhB,UAAU,QAAf,SACE,cAAC0B,EAAA,EAAD,CAAQC,QAAQ,kBAAkB3B,UAAU,QAAQyB,GAAG,aAAaG,QAAS,kBAAMZ,EAAY,eAA/F,0BAEF,qBAAKhB,UAAU,QAAf,SACE,cAAC0B,EAAA,EAAD,CAAQC,QAAQ,kBAAkB3B,UAAU,QAAQyB,GAAG,gBAAgBG,QAAS,kBAAMZ,EAAY,kBAAlG,6BAEF,qBAAKhB,UAAU,QAAf,SACE,cAAC0B,EAAA,EAAD,CAAQC,QAAQ,kBAAkB3B,UAAU,QAAQyB,GAAG,iBAAiBG,QAAS,kBAAMZ,EAAY,mBAAnG,qCAEF,qBAAKhB,UAAU,UACf,qBAAKA,UAAU,QAAf,SACE,cAAC0B,EAAA,EAAD,CAAQC,QAAQ,kBAAkB3B,UAAU,QAAQyB,GAAG,oBAAoBG,QAAS,kBAAMZ,EAAY,sBAAtG,iCAEF,qBAAKhB,UAAU,QAAf,SACE,cAAC0B,EAAA,EAAD,CAAQC,QAAQ,kBAAkBC,QAAS,kBA9HvD,WACEpB,EAAS,GACTS,SAASC,eAAe,OAAOE,UAAY,aAC3CH,SAASC,eAAe,OAAOE,UAAY,aAC3CH,SAASC,eAAe,OAAOE,UAAY,aAC3CH,SAASC,eAAe,SAASE,UAAY,aAC7Cd,EAAY,IACZI,EAAiB,IAEjB,IADA,IAAIa,EAAWN,SAASO,iBAAiB,UAChC3B,EAAI,EAAGA,EAAI0B,EAAS7B,OAAQG,IACnC0B,EAAS1B,GAAGsB,UAAW,EAoHkCU,IAAjD,0BAIN,qBAAK7B,UAAU,QAAf,SACE,qBAAIA,UAAU,gBAAd,UACGS,EAAcf,OAAS,GACtBe,EAAcqB,MAAM,EAAGrB,EAAcf,QAAQqC,KAAI,SAAAC,GAE/C,OADArC,QAAQC,IAAIa,GAEV,cAAC,EAAD,CAEEnB,MAAO0C,EACPzC,SAAUc,EACVX,OAAQe,EAAcf,QAHjBsC,EAAY9B,SAOC,IAAzBO,EAAcf,QACb,sBAAKM,UAAU,gBAAf,UACE,sBAAKA,UAAU,WAAf,UACE,oBAAIA,UAAU,aAAd,wBACA,4BAAIS,EAAc,GAAGwB,cAEvB,sBAAKjC,UAAU,WAAf,UACE,oBAAIA,UAAU,aAAd,wBACA,4BAAIS,EAAc,GAAGyB,6B,MC9JvCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFpB,SAASC,eAAe,U","file":"static/js/main.952eee76.chunk.js","sourcesContent":["\r\nconst PossibilityList = function ({ ghost, evidence, length }) {\r\n    let remainingEvidence = [];\r\n    let height = 100/length + \"%\";\r\n\r\n    console.log(height)\r\n\r\n    for (let i = 0; i < 3; i++) {\r\n        switch (evidence.length) {\r\n            case 1:\r\n                if (!ghost.evidence[i].includes(evidence[0])) {\r\n                    remainingEvidence.push(ghost.evidence[i]);\r\n                }\r\n                break;\r\n            case 2:\r\n                if (!ghost.evidence[i].includes(evidence[0]) && !ghost.evidence[i].includes(evidence[1])) {\r\n                    remainingEvidence.push(ghost.evidence[i]);\r\n                }\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"possibility\" style={{height: height}}>\r\n            <h4>{ghost.type} - </h4>\r\n            <h5>{remainingEvidence[0]}</h5>\r\n            {remainingEvidence.length > 1 &&\r\n                <h5> - {remainingEvidence[1]}</h5>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PossibilityList","import './App.css';\nimport { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport ghosts from '../src/ghosts.json';\nimport PossibilityList from '../src/PossibilityList.js'\n\nfunction App() {\n  const [collectedEvidence, setEvidence] = useState([]);\n  let [evidenceCount, setCount] = useState(0);\n  const [possibilities, setPossibilities] = useState([]);\n\n  function reset() {\n    setCount(0);\n    document.getElementById(\"ev1\").innerHTML = \"Evidence 1\";\n    document.getElementById(\"ev2\").innerHTML = \"Evidence 2\";\n    document.getElementById(\"ev3\").innerHTML = \"Evidence 3\";\n    document.getElementById(\"ghost\").innerHTML = \"Ghost Type\";\n    setEvidence([]);\n    setPossibilities([]);\n    let elements = document.querySelectorAll(\".evBtn\");\n    for (let i = 0; i < elements.length; i++) {\n      elements[i].disabled = false;\n    }\n  }\n\n  /**\n   * \n   * @param {array} providedEvidence  Array of evidence found\n   */\n  function findGhost(providedEvidence) {\n    for (let i = 0; i < ghosts.length; i++) {\n      const ghost = ghosts[i];\n      const isPossible = providedEvidence.every(evidence => ghost.evidence.includes(evidence));\n      if (isPossible) {\n        document.getElementById(\"ghost\").innerHTML = `${ghost.type}`;\n        break;\n      } else {\n        document.getElementById(\"ghost\").innerHTML = \"None\";\n      }\n    }\n  }\n\n  /**\n * Returns list of possible ghosts given a list of found evidence\n * @param {array} providedEvidence Array of evidence found\n * @returns An array of possible ghost objects\n */\n  function findPossibleGhosts() {\n    const possibleGhosts = ghosts.filter((ghost) => {\n      const isPossible = collectedEvidence.every(evidence => ghost.evidence.includes(evidence));\n      return isPossible;\n    });\n    setPossibilities(possibleGhosts)\n  }\n  /**\n   * \n   * @param {string} evidence String of evidence selected\n   */\n  function addEvidence(evidence) {\n    document.getElementById(evidence).disabled = true;\n    switch (evidenceCount) {\n      case 0:\n        collectedEvidence.push(evidence)\n        findPossibleGhosts();\n        document.getElementById(\"ev1\").innerHTML = `${evidence}`;\n        setCount(1);\n        break;\n\n      case 1:\n        collectedEvidence.push(evidence);\n        findPossibleGhosts();\n        document.getElementById(\"ev2\").innerHTML = `${evidence}`;\n        setCount(2)\n        break;\n\n      case 2:\n        collectedEvidence.push(evidence);\n        setPossibilities([]);\n        findPossibleGhosts();\n\n        findGhost(collectedEvidence)\n\n        document.getElementById(\"ev3\").innerHTML = `${evidence}`;\n        let elements = document.querySelectorAll(\".evBtn\");\n        for (let i = 0; i < elements.length; i++) {\n          elements[i].disabled = true;\n        }\n\n        evidenceCount++;\n        break;\n      default:\n        break;\n    }\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-2\">\n          <h4 className=\"evBox\" id=\"ev1\">Evidence 1</h4>\n        </div>\n        <div className=\"col-2\">\n          <h4 className=\"evBox\" id=\"ev2\">Evidence 2</h4>\n        </div>\n        <div className=\"col-2\">\n          <h4 className=\"evBox\" id=\"ev3\">Evidence 3</h4>\n        </div>\n        <div className=\"col-6\">\n          <h4 className=\"evBox\" id=\"ghost\" >Ghost Type</h4>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-6\">\n          <div className=\"row\">\n            <div className=\"col-4\">\n              <Button variant=\"outline-primary\" className=\"evBtn\" id=\"EMF level 5\" onClick={() => addEvidence(\"EMF level 5\")}>Emf level 5</Button>\n            </div>\n            <div className=\"col-4\">\n              <Button variant=\"outline-primary\" className=\"evBtn\" id=\"Fingerprints\" onClick={() => addEvidence(\"Fingerprints\")}>Fingerprints</Button>\n            </div>\n            <div className=\"col-4\">\n              <Button variant=\"outline-primary\" className=\"evBtn\" id=\"Ghost orbs\" onClick={() => addEvidence(\"Ghost orbs\")}>Ghost orbs</Button>\n            </div>\n            <div className=\"col-4\">\n              <Button variant=\"outline-primary\" className=\"evBtn\" id=\"Spirit box\" onClick={() => addEvidence(\"Spirit box\")}>Spirit box</Button>\n            </div>\n            <div className=\"col-4\">\n              <Button variant=\"outline-primary\" className=\"evBtn\" id=\"Ghost writing\" onClick={() => addEvidence(\"Ghost writing\")}>Ghost writing</Button>\n            </div>\n            <div className=\"col-4\">\n              <Button variant=\"outline-primary\" className=\"evBtn\" id=\"Freezing temps\" onClick={() => addEvidence(\"Freezing temps\")}>Freezing temperatures</Button>\n            </div>\n            <div className=\"col-4\"></div>\n            <div className=\"col-4\">\n              <Button variant=\"outline-primary\" className=\"evBtn\" id=\"D.O.T.S projector\" onClick={() => addEvidence(\"D.O.T.S projector\")}>D.O.T.S projector</Button>\n            </div>\n            <div className=\"col-4\">\n              <Button variant=\"outline-primary\" onClick={() => reset()}>Reset</Button>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-6\">\n          <ol className=\"possibilities\">\n            {possibilities.length > 1 &&\n              possibilities.slice(0, possibilities.length).map(possibility => {\n                console.log(possibilities)\n                return (\n                  <PossibilityList\n                    key={possibility.type}\n                    ghost={possibility}\n                    evidence={collectedEvidence}\n                    length={possibilities.length}\n                  />\n                );\n              })}\n            {possibilities.length === 1 &&\n              <div className=\"attributesBox\">\n                <div className=\"strength\">\n                  <h4 className=\"attributes\">Strength: </h4>\n                  <p>{possibilities[0].strength}</p>\n                </div>\n                <div className=\"weakness\">\n                  <h4 className=\"attributes\">Weakness: </h4>\n                  <p>{possibilities[0].weakness}</p>\n                </div>\n              </div>\n            }\n          </ol>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}